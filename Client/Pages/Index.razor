@page "/"

@using PortfolioWithServer.Client.Components;
@using PortfolioWithServer.Shared.Models;
@using PortfolioWithServer.Client.Services;
@using PortfolioWithServer.Client.Components.Experience;
@using PortfolioWithServer.Client.Components.Skills;

@inject ExperienceService experienceService
@inject IJSRuntime JSRuntime

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-16">
    <div class="mb-10">
        <ContactInfo />
    </div>

    <MudDivider Class="my-4 mb-10" Color="Color.Grey" />

    <MudText Typo="Typo.h4" Class="mb-4" Style="font-weight: bold; color: gray; text-align: center;">
        Professional Experience
    </MudText>

    @if (DeviceType == "desktop") {
        <MudTimeline>
            @foreach (var experience in experiences)
            {
                <MudTimelineItem>
                    <ExperienceCard Exp="experience" Index="experiences.IndexOf(experience)" />
                </MudTimelineItem>
            }
        </MudTimeline>
    }
    else
    {
        @foreach (var experience in experiences)
        {
            <ExperienceCardMobile Exp="experience" Index="experiences.IndexOf(experience)" />
        }
    }

    <MudDivider Class="my-8" />

    <SkillsComponent />

    <MudDivider Class="my-8" />

    <MudText Typo="Typo.h4" Class="mb-4" Style="font-weight: bold; color: gray; text-align: center;">
        Education
    </MudText>

    <EducationComponent />

    <MudDivider Class="my-8" />

    <MudPaper Elevation="3" Class="pa-8 mt-8 text-center">
        <MudIcon Icon="@Icons.Material.Filled.Construction" Color="Color.Primary" Size="Size.Large" Class="mb-4" />
        <MudText Typo="Typo.h4" Class="mb-4">Projects Coming Soon!</MudText>
        <MudText Typo="Typo.body1">As this is a project I work on in my free time, I'll be pushing exciting new showcases soon. Stay tuned!</MudText>
    </MudPaper>
</MudContainer>

@code {
    [Parameter]
    public bool IsLoading { get; set; }

    private List<Experience> experiences = new List<Experience>();
    private string DeviceType { get; set; } = "desktop";

    protected override async Task OnInitializedAsync()
    {
        experiences = await experienceService.GetExperiencesAsync();
        DeviceType = await JSRuntime.InvokeAsync<string>("detectDeviceType");
    }
}
